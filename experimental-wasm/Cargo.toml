[package]
name = "experimental-wasm"
version = "0.1.0"
authors = ["Craig Macomber <Craig.Macomber@microsoft.com>"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = [ "console_error_panic_hook" ] #, "wee_alloc"] #"console_error_panic_hook"

[dependencies]
forest = { path = "../forest" }
ahash = "0.7.6"
wasm-bindgen = "0.2.79"
uuid = { version = "0.8.2", features = ["wasm-bindgen", "v4"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is ~1K in code size compared to the default allocator's ~10K.
# It is slower than the default allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

getrandom = { version = "0.2.5", features = ["js"] }

[dev-dependencies]
criterion = "0.3.5"
wasm-bindgen-test = "0.3.29"

# https://www.reddit.com/r/rust/comments/kjcrxu/is_rust_code_compiled_into_webassembly_just_that/
[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-O4", "--enable-mutable-globals"]
